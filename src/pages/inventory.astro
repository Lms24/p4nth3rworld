---
import Layout from '../layouts/Layout.astro';
import InventoryItem from '../components/InventoryItem.astro';

import { getSession } from 'auth-astro/server';
const session = await getSession(Astro.request);

if(session === null) {
	return Astro.redirect("/");
}

const inventory = await fetch(
`${import.meta.env.WORLD_API_URL}inventory/`,
	{
		headers: {
			// @ts-ignore
			token: session.accessToken
		},
	},
);

const data = await inventory.json();

if(data.inventory.status === 401) {
	/* DEV */
	Astro.cookies.delete("authjs.csrf-token");
	Astro.cookies.delete("authjs.callback-url");
	Astro.cookies.delete("authjs.session-token");

	/* PROD */
	Astro.cookies.delete("__Host-authjs.csrf-token");
	Astro.cookies.delete("__Secure-authjs.callback-url");
	Astro.cookies.delete("__Secure-authjs.session-token");

	return Astro.redirect("/");
}

function getBgForLocation(location: string): string {
	switch(location) {
		case "mountain":
			return "indigo-400";
		case "forest":
			return "emerald-400";
		case "swamp":
			return "lime-400";
		case "city":
			return "cyan-400";
		case "desert":
			return "yellow-400";
	}
}

const gradient_bg = `from-${getBgForLocation(data.inventory.location)}`;
---

<Layout title="Inventory" favicon="ðŸŽ’" description="View your items">
	<section class={`flex flex-col rounded-t-lg p-6 rounded-r-lg justify-center items-center align gap-2 bg-gradient-to-b ${gradient_bg} to-zinc-950`}>
		<img src={session.user?.image} height="124" width="124" alt={`${session.user?.name} profile picture`} class="rounded-full" />
		<h1 class="text-3xl">@{session.user?.name}</h1>
	</section>

	<section class="grid grid-cols-2 gap-3 my-4">
		<div class="flex flex-col gap-1 bg-zinc-800 rounded-lg p-4">
			<p class="text-white capitalize font-bold">{data.inventory.location}</p>
			<p class="text-white">Zone</p>
		</div>
		<div class="flex flex-col gap-1 bg-zinc-800 rounded-lg p-4">
			<p class="text-white font-bold">DATE</p>
			<p class="text-white">Last moved</p>
		</div>
		<div class="flex flex-col gap-1 bg-zinc-800 rounded-lg p-4">
			<p class="text-white font-bold">{data.inventory.total}</p>
			<p class="text-white">items</p>
		</div>
		<div class="flex flex-col gap-1 bg-zinc-800 rounded-lg p-4">
			<p class="text-white capitalize font-bold">{data.inventory.items[0].name}</p>
			<p class="text-white">Rarest item ({data.inventory.items[0].rarity})</p>
		</div>
	</section>

	<section class="my-4">
		<ol class="grid grid-cols-3 gap-3">
			{data.inventory.items?.map(item => <InventoryItem name={item.name} count={item.count} rarity={item.rarity} />)}
		</ol>
	</section>

</Layout>
