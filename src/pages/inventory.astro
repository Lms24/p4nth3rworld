---
import Layout from '../layouts/Layout.astro';
import InventoryItem from '../components/InventoryItem.astro';
import InventoryInfoItem from '../components/InventoryInfoItem.astro';

const { session } = Astro.locals;

if(session === null || session?.error) {
	return Astro.redirect("/logout");
}

const req = await fetch(
`${import.meta.env.WORLD_API_URL}inventory/`,
	{
		headers: {
			token: session.accessToken,
		},
	},
);

if(req.status === 401) {
	return Astro.redirect("/logout");
}

const data = await req.json();

function getBgForLocation(location: string): string {
	switch(location) {
		case "mountain":
			return "indigo-400";
		case "forest":
			return "emerald-400";
		case "swamp":
			return "lime-400";
		case "city":
			return "cyan-400";
		case "desert":
			return "yellow-400";
		case "Not found":
			return "red-400";
	}
}

const gradient_bg = `from-${getBgForLocation(data.inventory.location)}`;
---

<Layout title="Inventory" favicon="ðŸŽ’" description="View your items">
	<section class={`flex flex-col rounded-t-lg p-6 rounded-r-lg justify-center items-center align gap-2 bg-gradient-to-b ${gradient_bg} to-zinc-950`}>
		<img src={session.user?.image} height="124" width="124" alt={`${session.user?.name} profile picture`} class="rounded-full drop-shadow-xl" />
		<h1 class="text-3xl font-bold">@{session.user?.name}</h1>
	</section>

	<section class="grid  grid-cols-1 sm:grid-cols-2 gap-3 my-4">
		<InventoryInfoItem icon={`/icons/zones/${data.inventory.location.replace(" ", "-").toLowerCase()}.svg`} iconAlt={data.inventory.location} topText={data.inventory.location} bottomText="Zone" />
		<InventoryInfoItem icon="/icons/utils/move.svg" iconAlt="Arrow pointing right to straight vertical line" topText="Date TBC" bottomText="Last moved" />
		<InventoryInfoItem icon="/icons/utils/pack.svg" iconAlt="Backpage" topText={data.inventory.total} bottomText="Items" />
		{data.inventory.items.length > 0 ? 
			<InventoryInfoItem icon="/icons/utils/trophy.svg" iconAlt="Trophy" topText={data.inventory.items[0].name} bottomText={`Rarest item (${data.inventory.items[0].rarity})`} />
		: ""}
	</section>

	<section class="my-4">
		{data.inventory.items.length > 0 ?
			<ol class="grid grid-cols-2 sm:grid-cols-3 gap-3">
				{data.inventory.items?.map(item => <InventoryItem name={item.name} count={item.count} rarity={item.rarity} />)}
			</ol>
		: <h2 class="flex flex-col gap-1 bg-zinc-800 rounded-lg relative text-center p-4 font-bold">No items!</h2>}
	</section>

</Layout>
